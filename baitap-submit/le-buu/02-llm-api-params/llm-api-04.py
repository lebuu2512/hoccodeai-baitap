import os
import requests
from dotenv import load_dotenv
from openai import OpenAI

load_dotenv()

# C·∫•u h√¨nh API Groq
client = OpenAI(
    base_url="https://api.groq.com/openai/v1",
    api_key=os.getenv("GROQ_API_KEY")
)

# H√†m chia nh·ªè vƒÉn b·∫£n ƒë·ªÉ ph√π h·ª£p v·ªõi context size
def split_text(text, max_length=4000):
    sentences = text.split(". ")  # Chia theo c√¢u
    chunks, chunk = [], ""
    for sentence in sentences:
        if len(chunk) + len(sentence) < max_length:
            chunk += sentence + ". "
        else:
            chunks.append(chunk.strip())
            chunk = sentence + ". "
    if chunk:
        chunks.append(chunk.strip())
    return chunks

# H√†m d·ªãch n·ªôi dung
def translate_text(text, source_lang="Anh", target_lang="Vi·ªát", tone="Trang tr·ªçng, t·ª± nhi√™n"):
    prompt = (f"B·∫°n l√† m·ªôt chuy√™n gia d·ªãch thu·∫≠t. H√£y d·ªãch ƒëo·∫°n vƒÉn sau t·ª´ {source_lang} sang {target_lang}.\n"
              f"Gi·ªØ nguy√™n √Ω nghƒ©a, gi·ªçng vƒÉn {tone}.\n"
              f"N·ªôi dung: \n{text}")
    
    completion = client.chat.completions.create(
        messages=[{"role": "system", "content": "B·∫°n l√† chuy√™n gia d·ªãch thu·∫≠t chuy√™n nghi·ªáp."},
                  {"role": "user", "content": prompt}],
        model="deepseek-r1-distill-llama-70b"
    )
    return completion.choices[0].message.content

# H√†m d·ªãch file
def translate_file(input_file, output_file, source_lang="Anh", target_lang="Vi·ªát", tone="Trang tr·ªçng, t·ª± nhi√™n"):
    with open(input_file, "r", encoding="utf-8", errors="replace") as f:
        text = f.read()
    
    chunks = split_text(text)
    translated_chunks = [translate_text(chunk, source_lang, target_lang, tone) for chunk in chunks]
    
    translated_text = "\n".join(translated_chunks)
    with open(output_file, "w", encoding="utf-8") as f:
        f.write(translated_text)
    
    print(f"‚úÖ D·ªãch xong! K·∫øt qu·∫£ l∆∞u t·∫°i: {output_file}")

# Ch·∫°y ch∆∞∆°ng tr√¨nh
if __name__ == "__main__":
    input_file = input("üìÇ Nh·∫≠p ƒë∆∞·ªùng d·∫´n file c·∫ßn d·ªãch: ").strip()
    output_file = input("üíæ Nh·∫≠p ƒë∆∞·ªùng d·∫´n file k·∫øt qu·∫£: ").strip()
    source_lang = input("üåç Ng√¥n ng·ªØ g·ªëc: ").strip()
    target_lang = input("üéØ Ng√¥n ng·ªØ ƒë√≠ch: ").strip()
    tone = input("üé≠ Gi·ªçng vƒÉn (VD: Trang tr·ªçng, Th√¢n thi·ªán, H·ªçc thu·∫≠t...): ").strip()
    
    translate_file(input_file, output_file, source_lang, target_lang, tone)